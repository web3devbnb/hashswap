{
  "contractName": "HashFactory",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "token0",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token1",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "pair",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "PairCreated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "INIT_CODE_PAIR_HASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "allPairs",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeTo",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "feeToSetter",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "getPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "allPairsLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenA",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "tokenB",
          "type": "address"
        }
      ],
      "name": "createPair",
      "outputs": [
        {
          "internalType": "address",
          "name": "pair",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeTo",
          "type": "address"
        }
      ],
      "name": "setFeeTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_feeToSetter",
          "type": "address"
        }
      ],
      "name": "setFeeToSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.6+commit.11564f7e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"PairCreated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"INIT_CODE_PAIR_HASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"allPairs\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allPairsLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"}],\"name\":\"createPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pair\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeTo\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeToSetter\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"getPair\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeTo\",\"type\":\"address\"}],\"name\":\"setFeeTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_feeToSetter\",\"type\":\"address\"}],\"name\":\"setFeeToSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/HashFactory.sol\":\"HashFactory\"},\"evmVersion\":\"berlin\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/HashERC20.sol\":{\"keccak256\":\"0x681fad20f283004f75dbcf2ff01c2a71ecb0731ed27d0e6f6ce29b876bab77d2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6caea369316d8e4efef40b13061ffeb7388a122e3866ea84168ee19d59f9d414\",\"dweb:/ipfs/QmYohx1x1pXUKtNx9DyTHX8knCtzGixudm9QsyzufYDpLT\"]},\"project:/contracts/HashFactory.sol\":{\"keccak256\":\"0x24c445dc4315b624fe05917fac402ccb9a550706c1c7ca4ba0c005eee67fb25a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e0e412dc17e463429ef362f4cd5d7639b99e84b7b40fa250a192487d8f5f6c12\",\"dweb:/ipfs/QmWF5bxQhQypYZQ7yWYYFLUo8thUJSdzT48NL7bEZL7FTt\"]},\"project:/contracts/HashPair.sol\":{\"keccak256\":\"0x9be37947a3ac8c0cac31a34a55cbf7c3b341f94072f01dd3ec212b5868b41de7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c9724d62a60ba8e4d50dc16bada43ea5ff9e847c7b18fa05af50a968f4ad3852\",\"dweb:/ipfs/QmaGnzj6qJhLLB4HYTZPKiax4RcDYu5hW8UzkcFCMKxPtz\"]},\"project:/contracts/interfaces/IERC20.sol\":{\"keccak256\":\"0x0765f5193ec950ec5cc97264fe818e9452b4da36f3ff4197c4032134366758ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2f7f09978b30e80bf634bdff9598a3ab300266bce1c2d88c60fc177543fa991\",\"dweb:/ipfs/QmXj9E9JmwvvJ1wA5n1npLVrE3HazX78VYtBvMaP17v4H9\"]},\"project:/contracts/interfaces/IHashCallee.sol\":{\"keccak256\":\"0x83153fa87f0e4ee47a537855c963582bb44bc43e00efccf0469d126e198c8f13\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0184da7bc4d2731f0b91629fe9040d441a22689bb448e224dc6953ec72c9dc3a\",\"dweb:/ipfs/QmQYfqQiuQFDAKCyyGCk31faM4GLsvUr9JBMqgXCGXZwF3\"]},\"project:/contracts/interfaces/IHashFactory.sol\":{\"keccak256\":\"0xee33aa7b4696e080cfe9a11adc7bb3040e14cbeca604f2ceba6cd478df727b8b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f0cdb4f085afee077e38f422cc06ce9cccc8ea00d106baf3b012bc74daf29ed2\",\"dweb:/ipfs/QmRDgQtJNbP1rjPQ1Hm7B2TAAZWPjcdDf8L1QUT7MKTYGR\"]},\"project:/contracts/libraries/Math.sol\":{\"keccak256\":\"0x435bd572564e63b37bfc4071e973b7794deefb9d8acea2791551a30bc575ff5c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b1edac5ad4fc17fe6f1a0924004addf03ed0c4e074e1843efd45700072645530\",\"dweb:/ipfs/QmaabSggpcdXXJharwCDSC2rG8uSmfpWuU6VUkdnXaVq9d\"]},\"project:/contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0x7408e0b6e09c3e683d0666d319daaf6f2b4e2b1c063dd9f857c4af5158491021\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://55a9f1585597d72b8b18578a6e6c13f8716e00bd806325babb42db1d12361429\",\"dweb:/ipfs/QmfYUash3a9F22mQWAmH2ZW94nm66hJe8s7jy5xyq5o1q8\"]},\"project:/contracts/libraries/UQ112x112.sol\":{\"keccak256\":\"0x3da55b00366e89dae90236b49165095411362bc74d66983ac309f7d8faac65de\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6096fe7488b320ce12af80b6137aa22f866ba08bea803ae78d29884f4b643678\",\"dweb:/ipfs/QmTQrFJmPFD2YzZorziENS3KVAXuijTsKTJd8Po9MEQ7ob\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051612a44380380612a4483398101604081905261002f91610054565b600180546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b6129b1806100936000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80635855a25a116100665780635855a25a14610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e9366004610639565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105e4565b6101eb565b005b6100ab61012b366004610606565b61025e565b6100ab61013e366004610606565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105e4565b61054d565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105bb565b601f1982820381018352601f9091011660408190526101d29190602001610652565b6040516020818303038152906040528051906020012081565b6001546001600160a01b0316331461023c5760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102c25760405162461bcd60e51b815260206004820152601960248201527f486173683a204944454e544943414c5f414444524553534553000000000000006044820152606401610233565b600080836001600160a01b0316856001600160a01b0316106102e55783856102e8565b84845b90925090506001600160a01b0382166103385760405162461bcd60e51b8152602060048201526012602482015271486173683a205a45524f5f4144445245535360701b6044820152606401610233565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103a15760405162461bcd60e51b8152602060048201526011602482015270486173683a20504149525f45584953545360781b6044820152606401610233565b6000604051806020016103b3906105bb565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561046557600080fd5b505af1158015610479573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105995760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b6044820152606401610233565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6122ee8061068e83390190565b80356001600160a01b03811681146105df57600080fd5b919050565b6000602082840312156105f657600080fd5b6105ff826105c8565b9392505050565b6000806040838503121561061957600080fd5b610622836105c8565b9150610630602084016105c8565b90509250929050565b60006020828403121561064b57600080fd5b5035919050565b6000825160005b818110156106735760208186018101518583015201610659565b81811115610682576000828501525b50919091019291505056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600881526748617368204c507360c01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fc32c260823c81b38eab2360f46b21ce4b707e76d83c45bed5ea3e5a10eee43a7818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556121e8806101066000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063bc25cf7711610097578063d505accf11610071578063d505accf14610435578063dd62ed3e14610448578063e91f214e14610473578063fff6cae91461048157600080fd5b8063bc25cf77146103fc578063c45a01551461040f578063d21220a71461042257600080fd5b806389afcb44116100d357806389afcb441461039257806395d89b41146103ba578063a9059cbb146103e0578063ba9a7a56146103f357600080fd5b806370a08231146103495780637464fc3d146103695780637ecebe001461037257600080fd5b806330adf81f11610166578063485cc95511610140578063485cc955146103115780635909c0d5146103245780635a3d54931461032d5780636a6278421461033657600080fd5b806330adf81f146102c7578063313ce567146102ee5780633644e5151461030857600080fd5b8063095ea7b3116101a2578063095ea7b31461024f5780630dfe16811461027257806318160ddd1461029d57806323b872dd146102b457600080fd5b8063022c0d9f146101c957806306fdde03146101de5780630902f1ac1461021b575b600080fd5b6101dc6101d7366004611edc565b610489565b005b6102056040518060400160405280600881526020016748617368204c507360c01b81525081565b6040516102129190611fda565b60405180910390f35b61022361097f565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610212565b61026261025d366004611e75565b6109a9565b6040519015158152602001610212565b600654610285906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b6102a660005481565b604051908152602001610212565b6102626102c2366004611dbd565b6109bf565b6102a67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102f6601281565b60405160ff9091168152602001610212565b6102a660035481565b6101dc61031f366004611d84565b610a58565b6102a660095481565b6102a6600a5481565b6102a6610344366004611d4a565b610ad2565b6102a6610357366004611d4a565b60016020526000908152604090205481565b6102a6600b5481565b6102a6610380366004611d4a565b60046020526000908152604090205481565b6103a56103a0366004611d4a565b610db0565b60408051928352602083019190915201610212565b610205604051806040016040528060078152602001660484153482d4c560cc1b81525081565b6102626103ee366004611e75565b61114d565b6102a66103e881565b6101dc61040a366004611d4a565b61115a565b600554610285906001600160a01b031681565b600754610285906001600160a01b031681565b6101dc610443366004611dfe565b61127d565b6102a6610456366004611d84565b600260209081526000928352604080842090915290825290205481565b6102a66001600160801b0381565b6101dc61148c565b600c546001146104b45760405162461bcd60e51b81526004016104ab9061200d565b60405180910390fd5b6000600c55841515806104c75750600084115b6105135760405162461bcd60e51b815260206004820181905260248201527f486173683a20494e53554646494349454e545f4f55545055545f414d4f554e5460448201526064016104ab565b60008061051e61097f565b5091509150816001600160701b0316871080156105435750806001600160701b031686105b61058f5760405162461bcd60e51b815260206004820152601c60248201527f486173683a20494e53554646494349454e545f4c49515549444954590000000060448201526064016104ab565b60065460075460009182916001600160a01b039182169190811690891682148015906105cd5750806001600160a01b0316896001600160a01b031614155b61060c5760405162461bcd60e51b815260206004820152601060248201526f486173683a20494e56414c49445f544f60801b60448201526064016104ab565b8a1561061d5761061d828a8d6115ce565b891561062e5761062e818a8c6115ce565b861561069b576040516375fb6bd360e01b81526001600160a01b038a16906375fb6bd3906106689033908f908f908e908e90600401611f8e565b600060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611ec3565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190611ec3565b92505050600089856001600160701b03166107a791906120d3565b83116107b45760006107d1565b6107c78a6001600160701b0387166120d3565b6107d190846120d3565b905060006107e88a6001600160701b0387166120d3565b83116107f5576000610812565b6108088a6001600160701b0387166120d3565b61081290846120d3565b905060008211806108235750600081115b61086f5760405162461bcd60e51b815260206004820152601f60248201527f486173683a20494e53554646494349454e545f494e5055545f414d4f554e540060448201526064016104ab565b600061089161087f846002611711565b61088b876103e8611711565b90611724565b905060006108a361087f846002611711565b90506108c8620f42406108c26001600160701b038b8116908b16611711565b90611711565b6108d28383611711565b101561090a5760405162461bcd60e51b8152602060048201526007602482015266486173683a204b60c81b60448201526064016104ab565b505061091884848888611730565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109b6338484611917565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546001600160801b0314610a43576001600160a01b0384166000908152600260209081526040808320338452909152902054610a1e9083611724565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a4e848484611979565b5060019392505050565b6005546001600160a01b03163314610aa45760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b60448201526064016104ab565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610af65760405162461bcd60e51b81526004016104ab9061200d565b6000600c81905580610b0661097f565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611ec3565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bd457600080fd5b505afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190611ec3565b90506000610c23836001600160701b038716611724565b90506000610c3a836001600160701b038716611724565b90506000610c488787611a1f565b60005490915080610c7f57610c6b6103e861088b610c668787611711565b611b6b565b9850610c7a60006103e8611bdb565b610cc6565b610cc36001600160701b038916610c968684611711565b610ca09190612071565b6001600160701b038916610cb48685611711565b610cbe9190612071565b611c6a565b98505b60008911610d225760405162461bcd60e51b815260206004820152602360248201527f486173683a20494e53554646494349454e545f4c49515549444954595f4d494e60448201526215115160ea1b60648201526084016104ab565b610d2c8a8a611bdb565b610d3886868a8a611730565b8115610d6257600854610d5e906001600160701b0380821691600160701b900416611711565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610dd55760405162461bcd60e51b81526004016104ab9061200d565b6000600c81905580610de561097f565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a082319060240160206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190611ec3565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190611ec3565b30600090815260016020526040812054919250610f0c8888611a1f565b60005490915080610f1d8487611711565b610f279190612071565b9a5080610f348486611711565b610f3e9190612071565b995060008b118015610f50575060008a115b610fa85760405162461bcd60e51b815260206004820152602360248201527f486173683a20494e53554646494349454e545f4c49515549444954595f42555260448201526213915160ea1b60648201526084016104ab565b610fb23084611c80565b610fbd878d8d6115ce565b610fc8868d8c6115ce565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611ec3565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611ec3565b93506110c785858b8b611730565b81156110f1576008546110ed906001600160701b0380821691600160701b900416611711565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109b6338484611979565b600c5460011461117c5760405162461bcd60e51b81526004016104ab9061200d565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916112269184918691611221916001600160701b039091169084906370a08231906024015b60206040518083038186803b1580156111e957600080fd5b505afa1580156111fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b9190611ec3565b6115ce565b6008546040516370a0823160e01b8152306004820152611273918391869161122191600160701b9091046001600160701b0316906001600160a01b038516906370a08231906024016111d1565b50506001600c5550565b428410156112bd5760405162461bcd60e51b815260206004820152600d60248201526c12185cda0e8811561412549151609a1b60448201526064016104ab565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876113108361213f565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161138992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156113f4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061142a5750886001600160a01b0316816001600160a01b0316145b6114765760405162461bcd60e51b815260206004820152601760248201527f486173683a20494e56414c49445f5349474e415455524500000000000000000060448201526064016104ab565b611481898989611917565b505050505050505050565b600c546001146114ae5760405162461bcd60e51b81526004016104ab9061200d565b6000600c556006546040516370a0823160e01b81523060048201526115c7916001600160a01b0316906370a082319060240160206040518083038186803b1580156114f857600080fd5b505afa15801561150c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115309190611ec3565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561157357600080fd5b505afa158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190611ec3565b6008546001600160701b0380821691600160701b900416611730565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161165a9190611f72565b6000604051808303816000865af19150503d8060008114611697576040519150601f19603f3d011682016040523d82523d6000602084013e61169c565b606091505b50915091508180156116c65750805115806116c65750808060200190518101906116c69190611ea1565b61170a5760405162461bcd60e51b815260206004820152601560248201527412185cda0e881514905394d1915497d19052531151605a1b60448201526064016104ab565b5050505050565b600061171d82846120b4565b9392505050565b600061171d82846120d3565b6001600160801b03841180159061174e57506001600160801b038311155b61178b5760405162461bcd60e51b815260206004820152600e60248201526d486173683a204f564552464c4f5760901b60448201526064016104ab565b600061179c6401000000004261215a565b6008549091506000906117bc90600160e01b900463ffffffff16836120ea565b905060008163ffffffff161180156117dc57506001600160701b03841615155b80156117f057506001600160701b03831615155b1561187f578063ffffffff166118188561180986611d0a565b6001600160e01b031690611d29565b6001600160e01b031661182b91906120b4565b6009600082825461183c9190612033565b909155505063ffffffff81166118558461180987611d0a565b6001600160e01b031661186891906120b4565b600a60008282546118799190612033565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461199c9082611724565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119cb9082611d3e565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061196c9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7057600080fd5b505afa158015611a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa89190611d67565b600b546001600160a01b038216158015945091925090611b57578015611b52576000611ae3610c666001600160701b03888116908816611711565b90506000611af083611b6b565b905080821115611b4f576000611b12611b098484611724565b60005490611711565b90506000611b2b83611b25866003611711565b90611d3e565b90506000611b398284612071565b90508015611b4b57611b4b8782611bdb565b5050505b50505b611b63565b8015611b63576000600b555b505092915050565b60006003821115611bcc5750806000611b85600283612071565b611b90906001612033565b90505b81811015611bc657905080600281611bab8186612071565b611bb59190612033565b611bbf9190612071565b9050611b93565b50919050565b8115611bd6575060015b919050565b600054611be89082611d3e565b60009081556001600160a01b038316815260016020526040902054611c0d9082611d3e565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c5e9085815260200190565b60405180910390a35050565b6000818310611c79578161171d565b5090919050565b6001600160a01b038216600090815260016020526040902054611ca39082611724565b6001600160a01b03831660009081526001602052604081209190915554611cca9082611724565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c5e565b6000611d23600160701b6001600160701b038416612085565b92915050565b600061171d6001600160701b0383168461204b565b600061171d8284612033565b600060208284031215611d5c57600080fd5b813561171d8161219a565b600060208284031215611d7957600080fd5b815161171d8161219a565b60008060408385031215611d9757600080fd5b8235611da28161219a565b91506020830135611db28161219a565b809150509250929050565b600080600060608486031215611dd257600080fd5b8335611ddd8161219a565b92506020840135611ded8161219a565b929592945050506040919091013590565b600080600080600080600060e0888a031215611e1957600080fd5b8735611e248161219a565b96506020880135611e348161219a565b95506040880135945060608801359350608088013560ff81168114611e5857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e8857600080fd5b8235611e938161219a565b946020939093013593505050565b600060208284031215611eb357600080fd5b8151801515811461171d57600080fd5b600060208284031215611ed557600080fd5b5051919050565b600080600080600060808688031215611ef457600080fd5b85359450602086013593506040860135611f0d8161219a565b9250606086013567ffffffffffffffff80821115611f2a57600080fd5b818801915088601f830112611f3e57600080fd5b813581811115611f4d57600080fd5b896020828501011115611f5f57600080fd5b9699959850939650602001949392505050565b60008251611f8481846020870161210f565b9190910192915050565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b6020815260008251806020840152611ff981604085016020870161210f565b601f01601f19169190910160400192915050565b6020808252600c908201526b12185cda0e881313d0d2d15160a21b604082015260600190565b600082198211156120465761204661216e565b500190565b60006001600160e01b038381168061206557612065612184565b92169190910492915050565b60008261208057612080612184565b500490565b60006001600160e01b03828116848216811515828404821116156120ab576120ab61216e565b02949350505050565b60008160001904831182151516156120ce576120ce61216e565b500290565b6000828210156120e5576120e561216e565b500390565b600063ffffffff838116908316818110156121075761210761216e565b039392505050565b60005b8381101561212a578181015183820152602001612112565b83811115612139576000848401525b50505050565b60006000198214156121535761215361216e565b5060010190565b60008261216957612169612184565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03811681146121af57600080fd5b5056fea26469706673582212208f3d510b98923c7238d43ac425a373810aaa9d77f6215464aaee51389d486f3c64736f6c63430008060033a26469706673582212206c2b1eb95e0f40fff86b872c94ee1feb6f71866c54381bdf1a49bfa032bca59f64736f6c63430008060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80635855a25a116100665780635855a25a14610100578063a2e74af614610108578063c9c653961461011d578063e6a4390514610130578063f46901ed1461016457600080fd5b8063017e7e5814610098578063094b7415146100c85780631e3dd18b146100db578063574f2ba3146100ee575b600080fd5b6000546100ab906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6001546100ab906001600160a01b031681565b6100ab6100e9366004610639565b610177565b6003545b6040519081526020016100bf565b6100f26101a1565b61011b6101163660046105e4565b6101eb565b005b6100ab61012b366004610606565b61025e565b6100ab61013e366004610606565b60026020908152600092835260408084209091529082529020546001600160a01b031681565b61011b6101723660046105e4565b61054d565b6003818154811061018757600080fd5b6000918252602090912001546001600160a01b0316905081565b6040516101b0602082016105bb565b601f1982820381018352601f9091011660408190526101d29190602001610652565b6040516020818303038152906040528051906020012081565b6001546001600160a01b0316331461023c5760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b60448201526064015b60405180910390fd5b600180546001600160a01b0319166001600160a01b0392909216919091179055565b6000816001600160a01b0316836001600160a01b031614156102c25760405162461bcd60e51b815260206004820152601960248201527f486173683a204944454e544943414c5f414444524553534553000000000000006044820152606401610233565b600080836001600160a01b0316856001600160a01b0316106102e55783856102e8565b84845b90925090506001600160a01b0382166103385760405162461bcd60e51b8152602060048201526012602482015271486173683a205a45524f5f4144445245535360701b6044820152606401610233565b6001600160a01b038281166000908152600260209081526040808320858516845290915290205416156103a15760405162461bcd60e51b8152602060048201526011602482015270486173683a20504149525f45584953545360781b6044820152606401610233565b6000604051806020016103b3906105bb565b601f1982820381018352601f9091011660408190526bffffffffffffffffffffffff19606086811b8216602084015285901b166034820152909150600090604801604051602081830303815290604052805190602001209050808251602084016000f560405163485cc95560e01b81526001600160a01b03868116600483015285811660248301529196509086169063485cc95590604401600060405180830381600087803b15801561046557600080fd5b505af1158015610479573d6000803e3d6000fd5b505050506001600160a01b0384811660008181526002602081815260408084208987168086529083528185208054978d166001600160a01b031998891681179091559383528185208686528352818520805488168517905560038054600181018255958190527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b9095018054909716841790965592548351928352908201527f0d3648bd0f6ba80134a33ba9275ac585d9d315f0ad8355cddefde31afa28d0e9910160405180910390a35050505092915050565b6001546001600160a01b031633146105995760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b6044820152606401610233565b600080546001600160a01b0319166001600160a01b0392909216919091179055565b6122ee8061068e83390190565b80356001600160a01b03811681146105df57600080fd5b919050565b6000602082840312156105f657600080fd5b6105ff826105c8565b9392505050565b6000806040838503121561061957600080fd5b610622836105c8565b9150610630602084016105c8565b90509250929050565b60006020828403121561064b57600080fd5b5035919050565b6000825160005b818110156106735760208186018101518583015201610659565b81811115610682576000828501525b50919091019291505056fe60806040526001600c5534801561001557600080fd5b50604080518082018252600881526748617368204c507360c01b6020918201528151808301835260018152603160f81b9082015281517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818301527fc32c260823c81b38eab2360f46b21ce4b707e76d83c45bed5ea3e5a10eee43a7818401527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a0808301919091528351808303909101815260c09091019092528151910120600355600580546001600160a01b031916331790556121e8806101066000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806370a08231116100f9578063bc25cf7711610097578063d505accf11610071578063d505accf14610435578063dd62ed3e14610448578063e91f214e14610473578063fff6cae91461048157600080fd5b8063bc25cf77146103fc578063c45a01551461040f578063d21220a71461042257600080fd5b806389afcb44116100d357806389afcb441461039257806395d89b41146103ba578063a9059cbb146103e0578063ba9a7a56146103f357600080fd5b806370a08231146103495780637464fc3d146103695780637ecebe001461037257600080fd5b806330adf81f11610166578063485cc95511610140578063485cc955146103115780635909c0d5146103245780635a3d54931461032d5780636a6278421461033657600080fd5b806330adf81f146102c7578063313ce567146102ee5780633644e5151461030857600080fd5b8063095ea7b3116101a2578063095ea7b31461024f5780630dfe16811461027257806318160ddd1461029d57806323b872dd146102b457600080fd5b8063022c0d9f146101c957806306fdde03146101de5780630902f1ac1461021b575b600080fd5b6101dc6101d7366004611edc565b610489565b005b6102056040518060400160405280600881526020016748617368204c507360c01b81525081565b6040516102129190611fda565b60405180910390f35b61022361097f565b604080516001600160701b03948516815293909216602084015263ffffffff1690820152606001610212565b61026261025d366004611e75565b6109a9565b6040519015158152602001610212565b600654610285906001600160a01b031681565b6040516001600160a01b039091168152602001610212565b6102a660005481565b604051908152602001610212565b6102626102c2366004611dbd565b6109bf565b6102a67f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b6102f6601281565b60405160ff9091168152602001610212565b6102a660035481565b6101dc61031f366004611d84565b610a58565b6102a660095481565b6102a6600a5481565b6102a6610344366004611d4a565b610ad2565b6102a6610357366004611d4a565b60016020526000908152604090205481565b6102a6600b5481565b6102a6610380366004611d4a565b60046020526000908152604090205481565b6103a56103a0366004611d4a565b610db0565b60408051928352602083019190915201610212565b610205604051806040016040528060078152602001660484153482d4c560cc1b81525081565b6102626103ee366004611e75565b61114d565b6102a66103e881565b6101dc61040a366004611d4a565b61115a565b600554610285906001600160a01b031681565b600754610285906001600160a01b031681565b6101dc610443366004611dfe565b61127d565b6102a6610456366004611d84565b600260209081526000928352604080842090915290825290205481565b6102a66001600160801b0381565b6101dc61148c565b600c546001146104b45760405162461bcd60e51b81526004016104ab9061200d565b60405180910390fd5b6000600c55841515806104c75750600084115b6105135760405162461bcd60e51b815260206004820181905260248201527f486173683a20494e53554646494349454e545f4f55545055545f414d4f554e5460448201526064016104ab565b60008061051e61097f565b5091509150816001600160701b0316871080156105435750806001600160701b031686105b61058f5760405162461bcd60e51b815260206004820152601c60248201527f486173683a20494e53554646494349454e545f4c49515549444954590000000060448201526064016104ab565b60065460075460009182916001600160a01b039182169190811690891682148015906105cd5750806001600160a01b0316896001600160a01b031614155b61060c5760405162461bcd60e51b815260206004820152601060248201526f486173683a20494e56414c49445f544f60801b60448201526064016104ab565b8a1561061d5761061d828a8d6115ce565b891561062e5761062e818a8c6115ce565b861561069b576040516375fb6bd360e01b81526001600160a01b038a16906375fb6bd3906106689033908f908f908e908e90600401611f8e565b600060405180830381600087803b15801561068257600080fd5b505af1158015610696573d6000803e3d6000fd5b505050505b6040516370a0823160e01b81523060048201526001600160a01b038316906370a082319060240160206040518083038186803b1580156106da57600080fd5b505afa1580156106ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107129190611ec3565b6040516370a0823160e01b81523060048201529094506001600160a01b038216906370a082319060240160206040518083038186803b15801561075457600080fd5b505afa158015610768573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061078c9190611ec3565b92505050600089856001600160701b03166107a791906120d3565b83116107b45760006107d1565b6107c78a6001600160701b0387166120d3565b6107d190846120d3565b905060006107e88a6001600160701b0387166120d3565b83116107f5576000610812565b6108088a6001600160701b0387166120d3565b61081290846120d3565b905060008211806108235750600081115b61086f5760405162461bcd60e51b815260206004820152601f60248201527f486173683a20494e53554646494349454e545f494e5055545f414d4f554e540060448201526064016104ab565b600061089161087f846002611711565b61088b876103e8611711565b90611724565b905060006108a361087f846002611711565b90506108c8620f42406108c26001600160701b038b8116908b16611711565b90611711565b6108d28383611711565b101561090a5760405162461bcd60e51b8152602060048201526007602482015266486173683a204b60c81b60448201526064016104ab565b505061091884848888611730565b60408051838152602081018390529081018c9052606081018b90526001600160a01b038a169033907fd78ad95fa46c994b6551d0da85fc275fe613ce37657fb8d5e3d130840159d8229060800160405180910390a350506001600c55505050505050505050565b6008546001600160701b0380821692600160701b830490911691600160e01b900463ffffffff1690565b60006109b6338484611917565b50600192915050565b6001600160a01b03831660009081526002602090815260408083203384529091528120546001600160801b0314610a43576001600160a01b0384166000908152600260209081526040808320338452909152902054610a1e9083611724565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b610a4e848484611979565b5060019392505050565b6005546001600160a01b03163314610aa45760405162461bcd60e51b815260206004820152600f60248201526e2430b9b41d102327a92124a22222a760891b60448201526064016104ab565b600680546001600160a01b039384166001600160a01b03199182161790915560078054929093169116179055565b6000600c54600114610af65760405162461bcd60e51b81526004016104ab9061200d565b6000600c81905580610b0661097f565b506006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610b5357600080fd5b505afa158015610b67573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b8b9190611ec3565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a082319060240160206040518083038186803b158015610bd457600080fd5b505afa158015610be8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c0c9190611ec3565b90506000610c23836001600160701b038716611724565b90506000610c3a836001600160701b038716611724565b90506000610c488787611a1f565b60005490915080610c7f57610c6b6103e861088b610c668787611711565b611b6b565b9850610c7a60006103e8611bdb565b610cc6565b610cc36001600160701b038916610c968684611711565b610ca09190612071565b6001600160701b038916610cb48685611711565b610cbe9190612071565b611c6a565b98505b60008911610d225760405162461bcd60e51b815260206004820152602360248201527f486173683a20494e53554646494349454e545f4c49515549444954595f4d494e60448201526215115160ea1b60648201526084016104ab565b610d2c8a8a611bdb565b610d3886868a8a611730565b8115610d6257600854610d5e906001600160701b0380821691600160701b900416611711565b600b555b604080518581526020810185905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250506001600c5550949695505050505050565b600080600c54600114610dd55760405162461bcd60e51b81526004016104ab9061200d565b6000600c81905580610de561097f565b506006546007546040516370a0823160e01b81523060048201529395509193506001600160a01b039081169291169060009083906370a082319060240160206040518083038186803b158015610e3a57600080fd5b505afa158015610e4e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e729190611ec3565b6040516370a0823160e01b81523060048201529091506000906001600160a01b038416906370a082319060240160206040518083038186803b158015610eb757600080fd5b505afa158015610ecb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610eef9190611ec3565b30600090815260016020526040812054919250610f0c8888611a1f565b60005490915080610f1d8487611711565b610f279190612071565b9a5080610f348486611711565b610f3e9190612071565b995060008b118015610f50575060008a115b610fa85760405162461bcd60e51b815260206004820152602360248201527f486173683a20494e53554646494349454e545f4c49515549444954595f42555260448201526213915160ea1b60648201526084016104ab565b610fb23084611c80565b610fbd878d8d6115ce565b610fc8868d8c6115ce565b6040516370a0823160e01b81523060048201526001600160a01b038816906370a082319060240160206040518083038186803b15801561100757600080fd5b505afa15801561101b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061103f9190611ec3565b6040516370a0823160e01b81523060048201529095506001600160a01b038716906370a082319060240160206040518083038186803b15801561108157600080fd5b505afa158015611095573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b99190611ec3565b93506110c785858b8b611730565b81156110f1576008546110ed906001600160701b0380821691600160701b900416611711565b600b555b604080518c8152602081018c90526001600160a01b038e169133917fdccd412f0b1252819cb1fd330b93224ca42612892bb3f4f789976e6d81936496910160405180910390a35050505050505050506001600c81905550915091565b60006109b6338484611979565b600c5460011461117c5760405162461bcd60e51b81526004016104ab9061200d565b6000600c556006546007546008546040516370a0823160e01b81523060048201526001600160a01b0393841693909216916112269184918691611221916001600160701b039091169084906370a08231906024015b60206040518083038186803b1580156111e957600080fd5b505afa1580156111fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061088b9190611ec3565b6115ce565b6008546040516370a0823160e01b8152306004820152611273918391869161122191600160701b9091046001600160701b0316906001600160a01b038516906370a08231906024016111d1565b50506001600c5550565b428410156112bd5760405162461bcd60e51b815260206004820152600d60248201526c12185cda0e8811561412549151609a1b60448201526064016104ab565b6003546001600160a01b038816600090815260046020526040812080549192917f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9918b918b918b9190876113108361213f565b909155506040805160208101969096526001600160a01b0394851690860152929091166060840152608083015260a082015260c0810187905260e0016040516020818303038152906040528051906020012060405160200161138992919061190160f01b81526002810192909252602282015260420190565b60408051601f198184030181528282528051602091820120600080855291840180845281905260ff88169284019290925260608301869052608083018590529092509060019060a0016020604051602081039080840390855afa1580156113f4573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381161580159061142a5750886001600160a01b0316816001600160a01b0316145b6114765760405162461bcd60e51b815260206004820152601760248201527f486173683a20494e56414c49445f5349474e415455524500000000000000000060448201526064016104ab565b611481898989611917565b505050505050505050565b600c546001146114ae5760405162461bcd60e51b81526004016104ab9061200d565b6000600c556006546040516370a0823160e01b81523060048201526115c7916001600160a01b0316906370a082319060240160206040518083038186803b1580156114f857600080fd5b505afa15801561150c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115309190611ec3565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a082319060240160206040518083038186803b15801561157357600080fd5b505afa158015611587573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115ab9190611ec3565b6008546001600160701b0380821691600160701b900416611730565b6001600c55565b604080518082018252601981527f7472616e7366657228616464726573732c75696e74323536290000000000000060209182015281516001600160a01b0385811660248301526044808301869052845180840390910181526064909201845291810180516001600160e01b031663a9059cbb60e01b1790529151600092839287169161165a9190611f72565b6000604051808303816000865af19150503d8060008114611697576040519150601f19603f3d011682016040523d82523d6000602084013e61169c565b606091505b50915091508180156116c65750805115806116c65750808060200190518101906116c69190611ea1565b61170a5760405162461bcd60e51b815260206004820152601560248201527412185cda0e881514905394d1915497d19052531151605a1b60448201526064016104ab565b5050505050565b600061171d82846120b4565b9392505050565b600061171d82846120d3565b6001600160801b03841180159061174e57506001600160801b038311155b61178b5760405162461bcd60e51b815260206004820152600e60248201526d486173683a204f564552464c4f5760901b60448201526064016104ab565b600061179c6401000000004261215a565b6008549091506000906117bc90600160e01b900463ffffffff16836120ea565b905060008163ffffffff161180156117dc57506001600160701b03841615155b80156117f057506001600160701b03831615155b1561187f578063ffffffff166118188561180986611d0a565b6001600160e01b031690611d29565b6001600160e01b031661182b91906120b4565b6009600082825461183c9190612033565b909155505063ffffffff81166118558461180987611d0a565b6001600160e01b031661186891906120b4565b600a60008282546118799190612033565b90915550505b6008805463ffffffff8416600160e01b026001600160e01b036001600160701b03898116600160701b9081026001600160e01b03199095168c83161794909417918216831794859055604080519382169282169290921783529290930490911660208201527f1c411e9a96e071241c2f21f7726b17ae89e3cab4c78be50e062b03a9fffbbad1910160405180910390a1505050505050565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b03831660009081526001602052604090205461199c9082611724565b6001600160a01b0380851660009081526001602052604080822093909355908416815220546119cb9082611d3e565b6001600160a01b0380841660008181526001602052604090819020939093559151908516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9061196c9085815260200190565b600080600560009054906101000a90046001600160a01b03166001600160a01b031663017e7e586040518163ffffffff1660e01b815260040160206040518083038186803b158015611a7057600080fd5b505afa158015611a84573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa89190611d67565b600b546001600160a01b038216158015945091925090611b57578015611b52576000611ae3610c666001600160701b03888116908816611711565b90506000611af083611b6b565b905080821115611b4f576000611b12611b098484611724565b60005490611711565b90506000611b2b83611b25866003611711565b90611d3e565b90506000611b398284612071565b90508015611b4b57611b4b8782611bdb565b5050505b50505b611b63565b8015611b63576000600b555b505092915050565b60006003821115611bcc5750806000611b85600283612071565b611b90906001612033565b90505b81811015611bc657905080600281611bab8186612071565b611bb59190612033565b611bbf9190612071565b9050611b93565b50919050565b8115611bd6575060015b919050565b600054611be89082611d3e565b60009081556001600160a01b038316815260016020526040902054611c0d9082611d3e565b6001600160a01b0383166000818152600160205260408082209390935591519091907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90611c5e9085815260200190565b60405180910390a35050565b6000818310611c79578161171d565b5090919050565b6001600160a01b038216600090815260016020526040902054611ca39082611724565b6001600160a01b03831660009081526001602052604081209190915554611cca9082611724565b60009081556040518281526001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90602001611c5e565b6000611d23600160701b6001600160701b038416612085565b92915050565b600061171d6001600160701b0383168461204b565b600061171d8284612033565b600060208284031215611d5c57600080fd5b813561171d8161219a565b600060208284031215611d7957600080fd5b815161171d8161219a565b60008060408385031215611d9757600080fd5b8235611da28161219a565b91506020830135611db28161219a565b809150509250929050565b600080600060608486031215611dd257600080fd5b8335611ddd8161219a565b92506020840135611ded8161219a565b929592945050506040919091013590565b600080600080600080600060e0888a031215611e1957600080fd5b8735611e248161219a565b96506020880135611e348161219a565b95506040880135945060608801359350608088013560ff81168114611e5857600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215611e8857600080fd5b8235611e938161219a565b946020939093013593505050565b600060208284031215611eb357600080fd5b8151801515811461171d57600080fd5b600060208284031215611ed557600080fd5b5051919050565b600080600080600060808688031215611ef457600080fd5b85359450602086013593506040860135611f0d8161219a565b9250606086013567ffffffffffffffff80821115611f2a57600080fd5b818801915088601f830112611f3e57600080fd5b813581811115611f4d57600080fd5b896020828501011115611f5f57600080fd5b9699959850939650602001949392505050565b60008251611f8481846020870161210f565b9190910192915050565b60018060a01b038616815284602082015283604082015260806060820152816080820152818360a0830137600081830160a090810191909152601f909201601f19160101949350505050565b6020815260008251806020840152611ff981604085016020870161210f565b601f01601f19169190910160400192915050565b6020808252600c908201526b12185cda0e881313d0d2d15160a21b604082015260600190565b600082198211156120465761204661216e565b500190565b60006001600160e01b038381168061206557612065612184565b92169190910492915050565b60008261208057612080612184565b500490565b60006001600160e01b03828116848216811515828404821116156120ab576120ab61216e565b02949350505050565b60008160001904831182151516156120ce576120ce61216e565b500290565b6000828210156120e5576120e561216e565b500390565b600063ffffffff838116908316818110156121075761210761216e565b039392505050565b60005b8381101561212a578181015183820152602001612112565b83811115612139576000848401525b50505050565b60006000198214156121535761215361216e565b5060010190565b60008261216957612169612184565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b6001600160a01b03811681146121af57600080fd5b5056fea26469706673582212208f3d510b98923c7238d43ac425a373810aaa9d77f6215464aaee51389d486f3c64736f6c63430008060033a26469706673582212206c2b1eb95e0f40fff86b872c94ee1feb6f71866c54381bdf1a49bfa032bca59f64736f6c63430008060033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:26",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:26",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "105:2:26"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:26"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:26"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:26",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:26",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:26"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:26"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:26",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:26"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:26"
                  },
                  "nodeType": "YulIf",
                  "src": "204:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:26",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:26",
                "type": ""
              }
            ],
            "src": "14:290:26"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4150:26",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:26",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:26"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:26"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:26"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:26"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:26",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:26",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:26"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:26"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:26",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:26"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:26"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:26"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:26"
                  },
                  "nodeType": "YulIf",
                  "src": "111:2:26"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:26",
                "type": ""
              }
            ],
            "src": "14:173:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "272:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:26",
                "type": ""
              }
            ],
            "src": "192:186:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "470:173:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "516:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "525:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "528:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "518:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "518:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "518:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "491:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "500:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "487:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "487:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "512:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "483:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "483:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "480:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "541:39:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "570:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "551:18:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "551:29:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "541:6:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "589:48:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "622:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "633:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "618:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "618:18:26"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "599:18:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "599:38:26"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "589:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "428:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "439:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "451:6:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "459:6:26",
                "type": ""
              }
            ],
            "src": "383:260:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "718:110:26",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "764:16:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "773:1:26",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "776:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "766:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "766:12:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "766:12:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "739:7:26"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "748:9:26"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "735:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "735:23:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "760:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "731:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "731:32:26"
                  },
                  "nodeType": "YulIf",
                  "src": "728:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "789:33:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "812:9:26"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "799:12:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:23:26"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "789:6:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "684:9:26",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "695:7:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "707:6:26",
                "type": ""
              }
            ],
            "src": "648:180:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "980:186:26",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "990:41:26",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1004:26:26",
                        "type": "",
                        "value": "0xffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1000:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1000:31:26"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "994:2:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1047:3:26"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1060:2:26",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1064:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1056:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1056:15:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1073:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1052:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1052:24:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1040:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1040:37:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1040:37:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "1097:3:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1102:2:26",
                            "type": "",
                            "value": "20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1093:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1093:12:26"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1115:2:26",
                                "type": "",
                                "value": "96"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "1119:6:26"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "1111:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1111:15:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1128:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1107:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1107:24:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1086:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1086:46:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1086:46:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1141:19:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1152:3:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1157:2:26",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1148:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1148:12:26"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1141:3:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "948:3:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "953:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "961:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "972:3:26",
                "type": ""
              }
            ],
            "src": "833:333:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1308:289:26",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1318:27:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1338:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1332:5:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1332:13:26"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "1322:6:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1354:10:26",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1363:1:26",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "1358:1:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1425:77:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1450:3:26"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "1455:1:26"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1446:3:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1446:11:26"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1473:6:26"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1481:1:26"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1469:3:26"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1469:14:26"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1485:4:26",
                                      "type": "",
                                      "value": "0x20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "1465:3:26"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1465:25:26"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1459:5:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1459:32:26"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1439:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1439:53:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1439:53:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1384:1:26"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1387:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "1381:2:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1381:13:26"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1395:21:26",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1397:17:26",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "1406:1:26"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1409:4:26",
                              "type": "",
                              "value": "0x20"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "1402:3:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1402:12:26"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "1397:1:26"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1377:3:26",
                    "statements": []
                  },
                  "src": "1373:129:26"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1528:31:26",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "1541:3:26"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1546:6:26"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1537:3:26"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1537:16:26"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1555:1:26",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1530:6:26"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1530:27:26"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1530:27:26"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "1517:1:26"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1520:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1514:2:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1514:13:26"
                  },
                  "nodeType": "YulIf",
                  "src": "1511:2:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1568:23:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1579:3:26"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1584:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1575:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1575:16:26"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "1568:3:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1284:3:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1289:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1300:3:26",
                "type": ""
              }
            ],
            "src": "1171:426:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1703:102:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1713:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1725:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1736:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1721:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1721:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1713:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1755:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1770:6:26"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1786:3:26",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1791:1:26",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1782:3:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1782:11:26"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1795:1:26",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1778:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1778:19:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1766:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1766:32:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1748:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1748:51:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1748:51:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1672:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1683:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1694:4:26",
                "type": ""
              }
            ],
            "src": "1602:203:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1939:175:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1949:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1961:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1972:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1957:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1957:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1949:4:26"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1984:29:26",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2002:3:26",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2007:1:26",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "1998:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1998:11:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2011:1:26",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "1994:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1994:19:26"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "1988:2:26",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2029:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2044:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2052:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2040:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2040:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2022:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2022:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2022:34:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2076:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2087:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2072:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2072:18:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "2096:6:26"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "2104:2:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2092:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2092:15:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2065:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2065:43:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2065:43:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1900:9:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1911:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1919:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1930:4:26",
                "type": ""
              }
            ],
            "src": "1810:304:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2248:145:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2258:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2270:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2281:2:26",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2266:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2258:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2300:9:26"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "2315:6:26"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2331:3:26",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2336:1:26",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2327:3:26"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2327:11:26"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2340:1:26",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "2323:3:26"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2323:19:26"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "2311:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2311:32:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2293:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2293:51:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2293:51:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2364:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2375:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2360:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2360:18:26"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "2380:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2353:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2353:34:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2353:34:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2209:9:26",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2220:6:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2228:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2239:4:26",
                "type": ""
              }
            ],
            "src": "2119:274:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2499:76:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2509:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2521:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2532:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2517:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2517:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2509:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2551:9:26"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2562:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2544:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2544:25:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2544:25:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2468:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2479:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2490:4:26",
                "type": ""
              }
            ],
            "src": "2398:177:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2754:175:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2771:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2782:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2764:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2764:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2764:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2805:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2816:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2801:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2801:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2821:2:26",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2794:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2794:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2794:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2844:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2855:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2840:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2840:18:26"
                      },
                      {
                        "hexValue": "486173683a204944454e544943414c5f414444524553534553",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2860:27:26",
                        "type": "",
                        "value": "Hash: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2833:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2833:55:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2833:55:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2897:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2909:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2920:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2905:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2905:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2897:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0dfc1ac40dc3582ae99ce12beaa96880bfb9685f324c63b3f3b4d1760a7e4e8d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2731:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2745:4:26",
                "type": ""
              }
            ],
            "src": "2580:349:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3108:165:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3125:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3136:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3118:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3118:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3118:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3159:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3170:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3155:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3155:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3175:2:26",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3148:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3148:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3148:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3198:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3209:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3194:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3194:18:26"
                      },
                      {
                        "hexValue": "486173683a20464f5242494444454e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3214:17:26",
                        "type": "",
                        "value": "Hash: FORBIDDEN"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3187:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3187:45:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3187:45:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3241:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3253:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3264:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3249:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3249:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3241:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3085:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3099:4:26",
                "type": ""
              }
            ],
            "src": "2934:339:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3452:168:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3469:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3480:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3462:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3462:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3462:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3503:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3514:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3499:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3499:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3519:2:26",
                        "type": "",
                        "value": "18"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3492:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3492:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3492:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3542:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3553:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3538:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3538:18:26"
                      },
                      {
                        "hexValue": "486173683a205a45524f5f41444452455353",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3558:20:26",
                        "type": "",
                        "value": "Hash: ZERO_ADDRESS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3531:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3531:48:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3531:48:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3588:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3600:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3611:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3596:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3596:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3588:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_38c14390d9c7a5d76bcfe3ecb1f02a1e2d76fcb997d349bd7cf1b4d0f4908609__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3429:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3443:4:26",
                "type": ""
              }
            ],
            "src": "3278:342:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3799:167:26",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3816:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3827:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3809:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3809:21:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3809:21:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3850:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3861:2:26",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3846:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3846:18:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3866:2:26",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3839:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3839:30:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3839:30:26"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3889:9:26"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3900:2:26",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3885:3:26"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3885:18:26"
                      },
                      {
                        "hexValue": "486173683a20504149525f455849535453",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3905:19:26",
                        "type": "",
                        "value": "Hash: PAIR_EXISTS"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3878:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3878:47:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3878:47:26"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3934:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3946:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3957:2:26",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3942:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3942:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3934:4:26"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f3e08012275f3eb392760f45882f902cdc23fe3df2faf28fff89e31313bc73fd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3776:9:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3790:4:26",
                "type": ""
              }
            ],
            "src": "3625:341:26"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4072:76:26",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4082:26:26",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4094:9:26"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4105:2:26",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4090:3:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4090:18:26"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4082:4:26"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4124:9:26"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4135:6:26"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4117:6:26"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4117:25:26"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4117:25:26"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4041:9:26",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4052:6:26",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4063:4:26",
                "type": ""
              }
            ],
            "src": "3971:177:26"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_packed_t_address_t_address__to_t_address_t_address__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let _1 := not(0xffffffffffffffffffffffff)\n        mstore(pos, and(shl(96, value0), _1))\n        mstore(add(pos, 20), and(shl(96, value1), _1))\n        end := add(pos, 40)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        let i := 0\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            mstore(add(pos, i), mload(add(add(value0, i), 0x20)))\n        }\n        if gt(i, length) { mstore(add(pos, length), 0) }\n        end := add(pos, length)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0dfc1ac40dc3582ae99ce12beaa96880bfb9685f324c63b3f3b4d1760a7e4e8d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Hash: IDENTICAL_ADDRESSES\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Hash: FORBIDDEN\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_38c14390d9c7a5d76bcfe3ecb1f02a1e2d76fcb997d349bd7cf1b4d0f4908609__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Hash: ZERO_ADDRESS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f3e08012275f3eb392760f45882f902cdc23fe3df2faf28fff89e31313bc73fd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Hash: PAIR_EXISTS\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n}",
      "id": 26,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "83:1803:3:-:0;;;469:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;513:11;:26;;-1:-1:-1;;;;;;513:26:3;-1:-1:-1;;;;;513:26:3;;;;;;;;;;83:1803;;14:290:26;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;153:1;150;143:12;105:2;179:16;;-1:-1:-1;;;;;224:31:26;;214:42;;204:2;;270:1;267;260:12;204:2;293:5;95:209;-1:-1:-1;;;95:209:26:o;:::-;83:1803:3;;;;;;",
  "deployedSourceMap": "83:1803:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;218:20;;;;;-1:-1:-1;;;;;218:20:3;;;;;;-1:-1:-1;;;;;1766:32:26;;;1748:51;;1736:2;1721:18;218:20:3;;;;;;;;244:26;;;;;-1:-1:-1;;;;;244:26:3;;;345:25;;;;;;:::i;:::-;;:::i;552:94::-;624:8;:15;552:94;;;2544:25:26;;;2532:2;2517:18;552:94:3;2499:76:26;109:102:3;;;:::i;1723:161::-;;;;;;:::i;:::-;;:::i;:::-;;652:922;;;;;;:::i;:::-;;:::i;277:62::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;277:62:3;;;1580:137;;;;;;:::i;:::-;;:::i;345:25::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;345:25:3;;-1:-1:-1;345:25:3;:::o;109:102::-;182:27;;;;;;;:::i;:::-;-1:-1:-1;;182:27:3;;;;;;;;;;;;;;;;165:45;;182:27;;165:45;;:::i;:::-;;;;;;;;;;;;;155:56;;;;;;109:102;:::o;1723:161::-;1810:11;;-1:-1:-1;;;;;1810:11:3;1796:10;:25;1788:53;;;;-1:-1:-1;;;1788:53:3;;3136:2:26;1788:53:3;;;3118:21:26;3175:2;3155:18;;;3148:30;-1:-1:-1;;;3194:18:26;;;3187:45;3249:18;;1788:53:3;;;;;;;;;1851:11;:26;;-1:-1:-1;;;;;;1851:26:3;-1:-1:-1;;;;;1851:26:3;;;;;;;;;;1723:161::o;652:922::-;722:12;764:6;-1:-1:-1;;;;;754:16:3;:6;-1:-1:-1;;;;;754:16:3;;;746:54;;;;-1:-1:-1;;;746:54:3;;2782:2:26;746:54:3;;;2764:21:26;2821:2;2801:18;;;2794:30;2860:27;2840:18;;;2833:55;2905:18;;746:54:3;2754:175:26;746:54:3;811:14;827;854:6;-1:-1:-1;;;;;845:15:3;:6;-1:-1:-1;;;;;845:15:3;;:53;;883:6;891;845:53;;;864:6;872;845:53;810:88;;-1:-1:-1;810:88:3;-1:-1:-1;;;;;;916:20:3;;908:51;;;;-1:-1:-1;;;908:51:3;;3480:2:26;908:51:3;;;3462:21:26;3519:2;3499:18;;;3492:30;-1:-1:-1;;;3538:18:26;;;3531:48;3596:18;;908:51:3;3452:168:26;908:51:3;-1:-1:-1;;;;;977:15:3;;;1012:1;977:15;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:37;969:67;;;;-1:-1:-1;;;969:67:3;;3827:2:26;969:67:3;;;3809:21:26;3866:2;3846:18;;;3839:30;-1:-1:-1;;;3885:18:26;;;3878:47;3942:18;;969:67:3;3799:167:26;969:67:3;1076:21;1100:27;;;;;;;;:::i;:::-;-1:-1:-1;;1100:27:3;;;;;;;;;;;;;;;;-1:-1:-1;;1060:2:26;1056:15;;;1052:24;;1100:27:3;1162:32;;1040:37:26;1111:15;;;1107:24;1093:12;;;1086:46;1100:27:3;;-1:-1:-1;1137:12:3;;1148::26;;1162:32:3;;;;;;;;;;;;1152:43;;;;;;1137:58;;1283:4;1272:8;1266:15;1261:2;1251:8;1247:17;1244:1;1236:52;1307:41;;-1:-1:-1;;;1307:41:3;;-1:-1:-1;;;;;2040:15:26;;;1307:41:3;;;2022:34:26;2092:15;;;2072:18;;;2065:43;1228:60:3;;-1:-1:-1;1307:25:3;;;;;;1957:18:26;;1307:41:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;1358:15:3;;;;;;;:7;:15;;;;;;;;:23;;;;;;;;;;;;:30;;;;;-1:-1:-1;;;;;;1358:30:3;;;;;;;;1398:15;;;;;;:23;;;;;;;;:30;;;;;;;;1483:8;:19;;-1:-1:-1;1483:19:3;;;;;;;;;;;;;;;;;;;;;;1551:15;;1517:50;;2293:51:26;;;2360:18;;;2353:34;1517:50:3;;2266:18:26;1517:50:3;;;;;;;736:838;;;;652:922;;;;:::o;1580:137::-;1655:11;;-1:-1:-1;;;;;1655:11:3;1641:10;:25;1633:53;;;;-1:-1:-1;;;1633:53:3;;3136:2:26;1633:53:3;;;3118:21:26;3175:2;3155:18;;;3148:30;-1:-1:-1;;;3194:18:26;;;3187:45;3249:18;;1633:53:3;3108:165:26;1633:53:3;1696:5;:14;;-1:-1:-1;;;;;;1696:14:3;-1:-1:-1;;;;;1696:14:3;;;;;;;;;;1580:137::o;-1:-1:-1:-;;;;;;;;:::o;14:173:26:-;82:20;;-1:-1:-1;;;;;131:31:26;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;320:1;317;310:12;272:2;343:29;362:9;343:29;:::i;:::-;333:39;262:116;-1:-1:-1;;;262:116:26:o;383:260::-;451:6;459;512:2;500:9;491:7;487:23;483:32;480:2;;;528:1;525;518:12;480:2;551:29;570:9;551:29;:::i;:::-;541:39;;599:38;633:2;622:9;618:18;599:38;:::i;:::-;589:48;;470:173;;;;;:::o;648:180::-;707:6;760:2;748:9;739:7;735:23;731:32;728:2;;;776:1;773;766:12;728:2;-1:-1:-1;799:23:26;;718:110;-1:-1:-1;718:110:26:o;1171:426::-;1300:3;1338:6;1332:13;1363:1;1373:129;1387:6;1384:1;1381:13;1373:129;;;1485:4;1469:14;;;1465:25;;1459:32;1446:11;;;1439:53;1402:12;1373:129;;;1520:6;1517:1;1514:13;1511:2;;;1555:1;1546:6;1541:3;1537:16;1530:27;1511:2;-1:-1:-1;1575:16:26;;;;;1308:289;-1:-1:-1;;1308:289:26:o",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport './HashPair.sol';\n\ncontract HashFactory{\n    bytes32 public constant INIT_CODE_PAIR_HASH = keccak256(abi.encodePacked(type(HashPair).creationCode));\n\n    address public feeTo;\n    address public feeToSetter;\n\n    mapping(address => mapping(address => address)) public getPair;\n    address[] public allPairs;\n\n    event PairCreated(address indexed token0, address indexed token1, address pair, uint);\n\n    constructor(address _feeToSetter) {\n        feeToSetter = _feeToSetter;\n    }\n\n    function allPairsLength() external view returns (uint) {\n        return allPairs.length;\n    }\n\n    function createPair(address tokenA, address tokenB) external returns (address pair) {\n        require(tokenA != tokenB, 'Hash: IDENTICAL_ADDRESSES');\n        (address token0, address token1) = tokenA < tokenB ? (tokenA, tokenB) : (tokenB, tokenA);\n        require(token0 != address(0), 'Hash: ZERO_ADDRESS');\n        require(getPair[token0][token1] == address(0), 'Hash: PAIR_EXISTS'); // single check is sufficient\n        bytes memory bytecode = type(HashPair).creationCode;\n        bytes32 salt = keccak256(abi.encodePacked(token0, token1));\n        assembly {\n            pair := create2(0, add(bytecode, 32), mload(bytecode), salt)\n        }\n        HashPair(pair).initialize(token0, token1);\n        getPair[token0][token1] = pair;\n        getPair[token1][token0] = pair; // populate mapping in the reverse direction\n        allPairs.push(pair);\n        emit PairCreated(token0, token1, pair, allPairs.length);\n    }\n\n    function setFeeTo(address _feeTo) external {\n        require(msg.sender == feeToSetter, 'Hash: FORBIDDEN');\n        feeTo = _feeTo;\n    }\n\n    function setFeeToSetter(address _feeToSetter) external {\n        require(msg.sender == feeToSetter, 'Hash: FORBIDDEN');\n        feeToSetter = _feeToSetter;\n    }\n}\n",
  "sourcePath": "/workspace/Hashswap-core/contracts/HashFactory.sol",
  "ast": {
    "absolutePath": "project:/contracts/HashFactory.sol",
    "exportedSymbols": {
      "HashERC20": [
        938
      ],
      "HashFactory": [
        1143
      ],
      "HashPair": [
        2203
      ],
      "IERC20": [
        6559
      ],
      "IHashCallee": [
        6573
      ],
      "IHashFactory": [
        6759
      ],
      "Math": [
        7755
      ],
      "SafeMath": [
        8171
      ],
      "UQ112x112": [
        8375
      ]
    },
    "id": 1144,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 940,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:3"
      },
      {
        "absolutePath": "project:/contracts/HashPair.sol",
        "file": "./HashPair.sol",
        "id": 941,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1144,
        "sourceUnit": 2204,
        "src": "57:24:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [
          2203
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1143,
        "linearizedBaseContracts": [
          1143
        ],
        "name": "HashFactory",
        "nameLocation": "92:11:3",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": true,
            "functionSelector": "5855a25a",
            "id": 952,
            "mutability": "constant",
            "name": "INIT_CODE_PAIR_HASH",
            "nameLocation": "133:19:3",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "109:102:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 942,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "109:7:3",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "arguments": [
                    {
                      "expression": {
                        "arguments": [
                          {
                            "id": 947,
                            "name": "HashPair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2203,
                            "src": "187:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_HashPair_$2203_$",
                              "typeString": "type(contract HashPair)"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_type$_t_contract$_HashPair_$2203_$",
                              "typeString": "type(contract HashPair)"
                            }
                          ],
                          "id": 946,
                          "name": "type",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967269,
                          "src": "182:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                            "typeString": "function () pure"
                          }
                        },
                        "id": 948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "182:14:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_meta_type_t_contract$_HashPair_$2203",
                          "typeString": "type(contract HashPair)"
                        }
                      },
                      "id": 949,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "creationCode",
                      "nodeType": "MemberAccess",
                      "src": "182:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    }
                  ],
                  "expression": {
                    "argumentTypes": [
                      {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes memory"
                      }
                    ],
                    "expression": {
                      "id": 944,
                      "name": "abi",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967295,
                      "src": "165:3:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_abi",
                        "typeString": "abi"
                      }
                    },
                    "id": 945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "encodePacked",
                    "nodeType": "MemberAccess",
                    "src": "165:16:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                      "typeString": "function () pure returns (bytes memory)"
                    }
                  },
                  "id": 950,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "functionCall",
                  "lValueRequested": false,
                  "names": [],
                  "nodeType": "FunctionCall",
                  "src": "165:45:3",
                  "tryCall": false,
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes memory"
                  }
                ],
                "id": 943,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 4294967288,
                "src": "155:9:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 951,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "155:56:3",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "017e7e58",
            "id": 954,
            "mutability": "mutable",
            "name": "feeTo",
            "nameLocation": "233:5:3",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "218:20:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 953,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "218:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "094b7415",
            "id": 956,
            "mutability": "mutable",
            "name": "feeToSetter",
            "nameLocation": "259:11:3",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "244:26:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 955,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "244:7:3",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e6a43905",
            "id": 962,
            "mutability": "mutable",
            "name": "getPair",
            "nameLocation": "332:7:3",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "277:62:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
              "typeString": "mapping(address => mapping(address => address))"
            },
            "typeName": {
              "id": 961,
              "keyType": {
                "id": 957,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "285:7:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "277:47:3",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                "typeString": "mapping(address => mapping(address => address))"
              },
              "valueType": {
                "id": 960,
                "keyType": {
                  "id": 958,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "304:7:3",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "296:27:3",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                  "typeString": "mapping(address => address)"
                },
                "valueType": {
                  "id": 959,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "315:7:3",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1e3dd18b",
            "id": 965,
            "mutability": "mutable",
            "name": "allPairs",
            "nameLocation": "362:8:3",
            "nodeType": "VariableDeclaration",
            "scope": 1143,
            "src": "345:25:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 963,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "345:7:3",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 964,
              "nodeType": "ArrayTypeName",
              "src": "345:9:3",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 975,
            "name": "PairCreated",
            "nameLocation": "383:11:3",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 974,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 967,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token0",
                  "nameLocation": "411:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "395:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 966,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "395:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 969,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token1",
                  "nameLocation": "435:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "419:22:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 971,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "451:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "443:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 970,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 973,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 975,
                  "src": "457:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 972,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "457:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "394:68:3"
            },
            "src": "377:86:3"
          },
          {
            "body": {
              "id": 984,
              "nodeType": "Block",
              "src": "503:43:3",
              "statements": [
                {
                  "expression": {
                    "id": 982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 980,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "513:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 981,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 977,
                      "src": "527:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "513:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 983,
                  "nodeType": "ExpressionStatement",
                  "src": "513:26:3"
                }
              ]
            },
            "id": 985,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 978,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 977,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "489:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 985,
                  "src": "481:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 976,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "481:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "480:22:3"
            },
            "returnParameters": {
              "id": 979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "503:0:3"
            },
            "scope": 1143,
            "src": "469:77:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 993,
              "nodeType": "Block",
              "src": "607:39:3",
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "id": 990,
                      "name": "allPairs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 965,
                      "src": "624:8:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                        "typeString": "address[] storage ref"
                      }
                    },
                    "id": 991,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "624:15:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 989,
                  "id": 992,
                  "nodeType": "Return",
                  "src": "617:22:3"
                }
              ]
            },
            "functionSelector": "574f2ba3",
            "id": 994,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "allPairsLength",
            "nameLocation": "561:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "575:2:3"
            },
            "returnParameters": {
              "id": 989,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 988,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 994,
                  "src": "601:4:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 987,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "601:4:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "600:6:3"
            },
            "scope": 1143,
            "src": "552:94:3",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1105,
              "nodeType": "Block",
              "src": "736:838:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1004,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "754:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 1005,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "764:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "754:16:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173683a204944454e544943414c5f414444524553534553",
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "772:27:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0dfc1ac40dc3582ae99ce12beaa96880bfb9685f324c63b3f3b4d1760a7e4e8d",
                          "typeString": "literal_string \"Hash: IDENTICAL_ADDRESSES\""
                        },
                        "value": "Hash: IDENTICAL_ADDRESSES"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0dfc1ac40dc3582ae99ce12beaa96880bfb9685f324c63b3f3b4d1760a7e4e8d",
                          "typeString": "literal_string \"Hash: IDENTICAL_ADDRESSES\""
                        }
                      ],
                      "id": 1003,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "746:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "746:54:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1009,
                  "nodeType": "ExpressionStatement",
                  "src": "746:54:3"
                },
                {
                  "assignments": [
                    1011,
                    1013
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1011,
                      "mutability": "mutable",
                      "name": "token0",
                      "nameLocation": "819:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "811:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1010,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "811:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 1013,
                      "mutability": "mutable",
                      "name": "token1",
                      "nameLocation": "835:6:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "827:14:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 1012,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "827:7:3",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1024,
                  "initialValue": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 1016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 1014,
                        "name": "tokenA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 996,
                        "src": "845:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "id": 1015,
                        "name": "tokenB",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 998,
                        "src": "854:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "845:15:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "components": [
                        {
                          "id": 1020,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "883:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1021,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "891:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1022,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "882:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "id": 1023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "845:53:3",
                    "trueExpression": {
                      "components": [
                        {
                          "id": 1017,
                          "name": "tokenA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 996,
                          "src": "864:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 1018,
                          "name": "tokenB",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 998,
                          "src": "872:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 1019,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "863:16:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                        "typeString": "tuple(address,address)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$",
                      "typeString": "tuple(address,address)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "810:88:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1026,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "916:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1029,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "934:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1028,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "926:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1027,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "926:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1030,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "926:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "916:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173683a205a45524f5f41444452455353",
                        "id": 1032,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "938:20:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38c14390d9c7a5d76bcfe3ecb1f02a1e2d76fcb997d349bd7cf1b4d0f4908609",
                          "typeString": "literal_string \"Hash: ZERO_ADDRESS\""
                        },
                        "value": "Hash: ZERO_ADDRESS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38c14390d9c7a5d76bcfe3ecb1f02a1e2d76fcb997d349bd7cf1b4d0f4908609",
                          "typeString": "literal_string \"Hash: ZERO_ADDRESS\""
                        }
                      ],
                      "id": 1025,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "908:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "908:51:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1034,
                  "nodeType": "ExpressionStatement",
                  "src": "908:51:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1036,
                              "name": "getPair",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 962,
                              "src": "977:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                                "typeString": "mapping(address => mapping(address => address))"
                              }
                            },
                            "id": 1038,
                            "indexExpression": {
                              "id": 1037,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1011,
                              "src": "985:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "977:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                              "typeString": "mapping(address => address)"
                            }
                          },
                          "id": 1040,
                          "indexExpression": {
                            "id": 1039,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "993:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "977:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 1043,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1012:1:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 1042,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1004:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 1041,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1004:7:3",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 1044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1004:10:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "977:37:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173683a20504149525f455849535453",
                        "id": 1046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1016:19:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f3e08012275f3eb392760f45882f902cdc23fe3df2faf28fff89e31313bc73fd",
                          "typeString": "literal_string \"Hash: PAIR_EXISTS\""
                        },
                        "value": "Hash: PAIR_EXISTS"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f3e08012275f3eb392760f45882f902cdc23fe3df2faf28fff89e31313bc73fd",
                          "typeString": "literal_string \"Hash: PAIR_EXISTS\""
                        }
                      ],
                      "id": 1035,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "969:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "969:67:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1048,
                  "nodeType": "ExpressionStatement",
                  "src": "969:67:3"
                },
                {
                  "assignments": [
                    1050
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1050,
                      "mutability": "mutable",
                      "name": "bytecode",
                      "nameLocation": "1089:8:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "1076:21:3",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 1049,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "1076:5:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1055,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 1052,
                          "name": "HashPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2203,
                          "src": "1105:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_HashPair_$2203_$",
                            "typeString": "type(contract HashPair)"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_type$_t_contract$_HashPair_$2203_$",
                            "typeString": "type(contract HashPair)"
                          }
                        ],
                        "id": 1051,
                        "name": "type",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967269,
                        "src": "1100:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                          "typeString": "function () pure"
                        }
                      },
                      "id": 1053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1100:14:3",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_meta_type_t_contract$_HashPair_$2203",
                        "typeString": "type(contract HashPair)"
                      }
                    },
                    "id": 1054,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "memberName": "creationCode",
                    "nodeType": "MemberAccess",
                    "src": "1100:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1076:51:3"
                },
                {
                  "assignments": [
                    1057
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1057,
                      "mutability": "mutable",
                      "name": "salt",
                      "nameLocation": "1145:4:3",
                      "nodeType": "VariableDeclaration",
                      "scope": 1105,
                      "src": "1137:12:3",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 1056,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1137:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1065,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1061,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1011,
                            "src": "1179:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 1062,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1013,
                            "src": "1187:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 1059,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967295,
                            "src": "1162:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 1060,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1162:16:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 1063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1162:32:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 1058,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967288,
                      "src": "1152:9:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 1064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1152:43:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1137:58:3"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1214:84:3",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1228:60:3",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1244:1:3",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1251:8:3"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1261:2:3",
                                  "type": "",
                                  "value": "32"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "1247:3:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1247:17:3"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "bytecode",
                                  "nodeType": "YulIdentifier",
                                  "src": "1272:8:3"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "1266:5:3"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1266:15:3"
                            },
                            {
                              "name": "salt",
                              "nodeType": "YulIdentifier",
                              "src": "1283:4:3"
                            }
                          ],
                          "functionName": {
                            "name": "create2",
                            "nodeType": "YulIdentifier",
                            "src": "1236:7:3"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1236:52:3"
                        },
                        "variableNames": [
                          {
                            "name": "pair",
                            "nodeType": "YulIdentifier",
                            "src": "1228:4:3"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "berlin",
                  "externalReferences": [
                    {
                      "declaration": 1050,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1251:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1050,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1272:8:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1001,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1228:4:3",
                      "valueSize": 1
                    },
                    {
                      "declaration": 1057,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "1283:4:3",
                      "valueSize": 1
                    }
                  ],
                  "id": 1066,
                  "nodeType": "InlineAssembly",
                  "src": "1205:93:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1071,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "1333:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1072,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "1341:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1068,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1001,
                            "src": "1316:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1067,
                          "name": "HashPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2203,
                          "src": "1307:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_HashPair_$2203_$",
                            "typeString": "type(contract HashPair)"
                          }
                        },
                        "id": 1069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1307:14:3",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_HashPair_$2203",
                          "typeString": "contract HashPair"
                        }
                      },
                      "id": 1070,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1351,
                      "src": "1307:25:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address) external"
                      }
                    },
                    "id": 1073,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1307:41:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1074,
                  "nodeType": "ExpressionStatement",
                  "src": "1307:41:3"
                },
                {
                  "expression": {
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1075,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "1358:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1078,
                        "indexExpression": {
                          "id": 1076,
                          "name": "token0",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1011,
                          "src": "1366:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1358:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1079,
                      "indexExpression": {
                        "id": 1077,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "1374:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1358:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1080,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "1384:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1358:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1082,
                  "nodeType": "ExpressionStatement",
                  "src": "1358:30:3"
                },
                {
                  "expression": {
                    "id": 1089,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 1083,
                          "name": "getPair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 962,
                          "src": "1398:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_address_$_$",
                            "typeString": "mapping(address => mapping(address => address))"
                          }
                        },
                        "id": 1086,
                        "indexExpression": {
                          "id": 1084,
                          "name": "token1",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1013,
                          "src": "1406:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1398:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_address_$",
                          "typeString": "mapping(address => address)"
                        }
                      },
                      "id": 1087,
                      "indexExpression": {
                        "id": 1085,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "1414:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1398:23:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1088,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1001,
                      "src": "1424:4:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1398:30:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1090,
                  "nodeType": "ExpressionStatement",
                  "src": "1398:30:3"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1094,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "1497:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 1091,
                        "name": "allPairs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 965,
                        "src": "1483:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 1093,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1483:13:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 1095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1483:19:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1096,
                  "nodeType": "ExpressionStatement",
                  "src": "1483:19:3"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 1098,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1011,
                        "src": "1529:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1099,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1013,
                        "src": "1537:6:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1100,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1001,
                        "src": "1545:4:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 1101,
                          "name": "allPairs",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 965,
                          "src": "1551:8:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 1102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "1551:15:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1097,
                      "name": "PairCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 975,
                      "src": "1517:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 1103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1517:50:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1104,
                  "nodeType": "EmitStatement",
                  "src": "1512:55:3"
                }
              ]
            },
            "functionSelector": "c9c65396",
            "id": 1106,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "createPair",
            "nameLocation": "661:10:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 999,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 996,
                  "mutability": "mutable",
                  "name": "tokenA",
                  "nameLocation": "680:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "672:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "672:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 998,
                  "mutability": "mutable",
                  "name": "tokenB",
                  "nameLocation": "696:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "688:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 997,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "671:32:3"
            },
            "returnParameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1001,
                  "mutability": "mutable",
                  "name": "pair",
                  "nameLocation": "730:4:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1106,
                  "src": "722:12:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "722:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "721:14:3"
            },
            "scope": 1143,
            "src": "652:922:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1123,
              "nodeType": "Block",
              "src": "1623:94:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1112,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1641:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1113,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1641:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1114,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 956,
                          "src": "1655:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1641:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173683a20464f5242494444454e",
                        "id": 1116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1668:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2",
                          "typeString": "literal_string \"Hash: FORBIDDEN\""
                        },
                        "value": "Hash: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2",
                          "typeString": "literal_string \"Hash: FORBIDDEN\""
                        }
                      ],
                      "id": 1111,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1633:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1633:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1118,
                  "nodeType": "ExpressionStatement",
                  "src": "1633:53:3"
                },
                {
                  "expression": {
                    "id": 1121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1119,
                      "name": "feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 954,
                      "src": "1696:5:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1120,
                      "name": "_feeTo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1108,
                      "src": "1704:6:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1696:14:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1122,
                  "nodeType": "ExpressionStatement",
                  "src": "1696:14:3"
                }
              ]
            },
            "functionSelector": "f46901ed",
            "id": 1124,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeTo",
            "nameLocation": "1589:8:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1109,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1108,
                  "mutability": "mutable",
                  "name": "_feeTo",
                  "nameLocation": "1606:6:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1124,
                  "src": "1598:14:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1107,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1598:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1597:16:3"
            },
            "returnParameters": {
              "id": 1110,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1623:0:3"
            },
            "scope": 1143,
            "src": "1580:137:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 1141,
              "nodeType": "Block",
              "src": "1778:106:3",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1133,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1130,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1796:3:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1796:10:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1132,
                          "name": "feeToSetter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 956,
                          "src": "1810:11:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1796:25:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "486173683a20464f5242494444454e",
                        "id": 1134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1823:17:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2",
                          "typeString": "literal_string \"Hash: FORBIDDEN\""
                        },
                        "value": "Hash: FORBIDDEN"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_35ac519cfdf1495b42f7818ae20da5496bea2a22922a542ae9a8682dd767f6c2",
                          "typeString": "literal_string \"Hash: FORBIDDEN\""
                        }
                      ],
                      "id": 1129,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1788:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1135,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1788:53:3",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1136,
                  "nodeType": "ExpressionStatement",
                  "src": "1788:53:3"
                },
                {
                  "expression": {
                    "id": 1139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1137,
                      "name": "feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 956,
                      "src": "1851:11:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1138,
                      "name": "_feeToSetter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1126,
                      "src": "1865:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1851:26:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 1140,
                  "nodeType": "ExpressionStatement",
                  "src": "1851:26:3"
                }
              ]
            },
            "functionSelector": "a2e74af6",
            "id": 1142,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setFeeToSetter",
            "nameLocation": "1732:14:3",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1127,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1126,
                  "mutability": "mutable",
                  "name": "_feeToSetter",
                  "nameLocation": "1755:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1142,
                  "src": "1747:20:3",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:3",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1746:22:3"
            },
            "returnParameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:0:3"
            },
            "scope": 1143,
            "src": "1723:161:3",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1144,
        "src": "83:1803:3",
        "usedErrors": []
      }
    ],
    "src": "32:1855:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.6+commit.11564f7e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-07-08T17:13:27.018Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}